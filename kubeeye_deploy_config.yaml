apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: kubeeye-controller-manager
  name: kubeeye-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: inspectplans.kubeeye.kubesphere.io
spec:
  group: kubeeye.kubesphere.io
  names:
    kind: InspectPlan
    listKind: InspectPlanList
    plural: inspectplans
    singular: inspectplan
  scope: Cluster
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: InspectPlan is the Schema for the InspectPlans API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InspectPlanSpec defines the desired state of InspectPlan
            properties:
              clusterName:
                items:
                  type: string
                type: array
              kubeConfig:
                type: string
              maxTasks:
                type: integer
              ruleNames:
                items:
                  type: string
                type: array
              schedule:
                type: string
              suspend:
                type: boolean
              tag:
                type: string
              timeout:
                type: string
            type: object
          status:
            description: InspectPlanStatus defines the observed state of InspectPlan
            properties:
              TaskNames:
                items:
                  type: string
                type: array
              lastScheduleTime:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                format: date-time
                type: string
              lastTaskName:
                type: string
              lastTaskStatus:
                type: string
              nextScheduleTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: inspectresults.kubeeye.kubesphere.io
spec:
  group: kubeeye.kubesphere.io
  names:
    kind: InspectResult
    listKind: InspectResultList
    plural: inspectresults
    singular: inspectresult
  scope: Cluster
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: InspectResult is the Schema for the inspectresults API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InspectResultSpec defines the desired state of InspectResult
            properties:
              componentResult:
                items:
                  properties:
                    endpoint:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
                type: array
              inspectRuleTotal:
                additionalProperties:
                  type: integer
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: object
              nodeInfoResult:
                additionalProperties:
                  properties:
                    fileChangeResult:
                      items:
                        properties:
                          fileName:
                            type: string
                          issues:
                            items:
                              type: string
                            type: array
                          path:
                            type: string
                        type: object
                      type: array
                    fileFilterResult:
                      items:
                        properties:
                          fileName:
                            type: string
                          issues:
                            items:
                              type: string
                            type: array
                          path:
                            type: string
                        type: object
                      type: array
                    nodeInfo:
                      additionalProperties:
                        type: string
                      type: object
                    sysctlResult:
                      items:
                        properties:
                          assert:
                            type: boolean
                          name:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    systemdResult:
                      items:
                        properties:
                          assert:
                            type: boolean
                          name:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                type: object
              opaResult:
                description: kubeeye inspect result
                properties:
                  extraInfo:
                    properties:
                      namespacesList:
                        items:
                          type: string
                        type: array
                      workloadsCount:
                        type: integer
                    type: object
                  percent:
                    type: integer
                  resourceResults:
                    items:
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        resourceType:
                          type: string
                        resultItems:
                          items:
                            properties:
                              level:
                                type: string
                              message:
                                type: string
                              reason:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  scoreInfo:
                    properties:
                      dangerous:
                        type: integer
                      ignore:
                        type: integer
                      passing:
                        type: integer
                      score:
                        type: integer
                      total:
                        type: integer
                      warning:
                        type: integer
                    type: object
                type: object
              prometheusResult:
                items:
                  items:
                    additionalProperties:
                      type: string
                    type: object
                  type: array
                type: array
            type: object
          status:
            description: InspectResultStatus defines the observed state of InspectResult
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: inspectrules.kubeeye.kubesphere.io
spec:
  group: kubeeye.kubesphere.io
  names:
    kind: InspectRule
    listKind: InspectRuleList
    plural: inspectrules
    singular: inspectrule
  scope: Cluster
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: InspectRule is the Schema for the InspectRule API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InspectRuleSpec defines the desired state of InspectRule
            properties:
              component:
                type: string
              fileChange:
                items:
                  properties:
                    desc:
                      type: string
                    name:
                      type: string
                    nodeName:
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    path:
                      type: string
                    rule:
                      type: string
                  type: object
                type: array
              fileFilter:
                items:
                  properties:
                    desc:
                      type: string
                    name:
                      type: string
                    nodeName:
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    path:
                      type: string
                    rule:
                      type: string
                  type: object
                type: array
              opas:
                items:
                  properties:
                    desc:
                      type: string
                    module:
                      type: string
                    name:
                      type: string
                    rule:
                      type: string
                  type: object
                type: array
              prometheus:
                items:
                  properties:
                    desc:
                      type: string
                    endpoint:
                      type: string
                    name:
                      type: string
                    rule:
                      type: string
                  type: object
                type: array
              prometheusEndpoint:
                type: string
              sysctl:
                items:
                  properties:
                    desc:
                      type: string
                    name:
                      type: string
                    nodeName:
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    rule:
                      type: string
                  type: object
                type: array
              systemd:
                items:
                  properties:
                    desc:
                      type: string
                    name:
                      type: string
                    nodeName:
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    rule:
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: InspectRuleStatus defines the observed state of InspectRule
            properties:
              importTime:
                format: date-time
                type: string
              ruleCount:
                type: integer
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: inspecttasks.kubeeye.kubesphere.io
spec:
  group: kubeeye.kubesphere.io
  names:
    kind: InspectTask
    listKind: InspectTaskList
    plural: inspecttasks
    singular: inspecttask
  scope: Cluster
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: InspectTask is the Schema for the InspectTasks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InspectTaskSpec defines the desired state of InspectTask
            properties:
              clusterName:
                items:
                  type: string
                type: array
              rules:
                items:
                  properties:
                    jobName:
                      type: string
                    ruleType:
                      type: string
                    runRule:
                      format: byte
                      type: string
                  type: object
                type: array
              timeout:
                type: string
            type: object
          status:
            description: InspectTaskStatus defines the observed state of InspectTask
            properties:
              clusterInfo:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  namespacesCount:
                    type: integer
                  nodesCount:
                    type: integer
                  version:
                    type: string
                type: object
              endTimestamp:
                format: date-time
                type: string
              phase:
                items:
                  properties:
                    jobName:
                      type: string
                    phase:
                      type: string
                  type: object
                type: array
              startTimestamp:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeeye-controller-manager
  namespace: kubeeye-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubeeye-leader-election-role
  namespace: kubeeye-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubeeye-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - watch
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - list
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectplans
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectplans/finalizers
  verbs:
  - update
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectplans/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectresults
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectresults/finalizers
  verbs:
  - update
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectresults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectrules/finalizers
  verbs:
  - update
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspectrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspecttasks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspecttasks/finalizers
  verbs:
  - update
- apiGroups:
  - kubeeye.kubesphere.io
  resources:
  - inspecttasks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeeye-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeeye-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeeye-leader-election-rolebinding
  namespace: kubeeye-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeeye-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubeeye-controller-manager
  namespace: kubeeye-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeeye-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeeye-manager-role
subjects:
- kind: ServiceAccount
  name: kubeeye-controller-manager
  namespace: kubeeye-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeeye-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeeye-proxy-role
subjects:
- kind: ServiceAccount
  name: kubeeye-controller-manager
  namespace: kubeeye-system
---
apiVersion: v1
data:
  config: |-
    job:
      autoDelTime: 30
      backLimit: 5
      image: kubespheredev/kubeeye:latest
      imagePullPolicy: Always
      resources:
        limits:
          cpu: 1000m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
kind: ConfigMap
metadata:
  name: kubeeye-config
  namespace: kubeeye-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: fa68b2a3.kubesphere.io
kind: ConfigMap
metadata:
  name: kubeeye-manager-config
  namespace: kubeeye-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: kubeeye-controller-manager
  name: kubeeye-controller-manager-metrics-service
  namespace: kubeeye-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: kubeeye-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: kubeeye-controller-manager
  name: kubeeye-controller-manager
  namespace: kubeeye-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: kubeeye-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: kubeeye-controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: kubesphere/kube-rbac-proxy:v0.11.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        image: kubespheredev/kubeeye-controller:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1500m
            memory: 2048Mi
          requests:
            cpu: 200m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubeeye-controller-manager
      terminationGracePeriodSeconds: 10
